{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 60,
      "metadata": {
        "id": "tM-s5bwLzCSM"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import scipy.stats\n",
        "from math import sqrt\n",
        "import plotly.graph_objects as go\n",
        "import statsmodels.api as sm\n",
        "import math\n",
        "import plotly.express as px\n",
        "import random\n",
        "import re"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 61,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-9Y3q-a3zHY5",
        "outputId": "e2d7d3e1-ee0d-48b5-d8e9-188f219475ce"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 62,
      "metadata": {
        "id": "W1-_T8gtzJSI"
      },
      "outputs": [],
      "source": [
        "df_netflix= pd.read_csv('/content/drive/MyDrive/netflix_titles.csv', usecols=['show_id','title','director','cast','listed_in','description'])\n",
        "df_titles= pd.read_csv('/content/drive/MyDrive/titles.csv', usecols=['id','title','type','genres','imdb_votes','imdb_score','tmdb_popularity','tmdb_score'])\n",
        "df_credits= pd.read_csv('/content/drive/MyDrive/credits.csv')\n",
        "df_imdb= pd.read_csv('/content/drive/MyDrive/imdb_top_1000.csv', usecols=['Series_Title', 'Gross'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 63,
      "metadata": {
        "id": "MBlYsSPezf48"
      },
      "outputs": [],
      "source": [
        "df_netflix['title'] = df_netflix['title'].str.lower().str.strip()\n",
        "df_titles['title'] = df_titles['title'].str.lower().str.strip()\n",
        "df_imdb['Series_Title']= df_imdb['Series_Title'].str.lower().str.strip()\n",
        "df_imdb['Gross']= df_imdb['Gross'].str.lower().str.strip()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 64,
      "metadata": {
        "id": "wNJp-1p-zg8q"
      },
      "outputs": [],
      "source": [
        "def clean_title(text):\n",
        "    if isinstance(text, str):\n",
        "        return re.sub(r'[^a-zA-Z0-9\\s]', '', text)\n",
        "    else:\n",
        "        return text\n",
        "\n",
        "df_netflix['title'] = df_netflix['title'].apply(clean_title)\n",
        "df_titles['title'] = df_titles['title'].apply(clean_title)\n",
        "df_imdb['Series_Title'] = df_imdb['Series_Title'].apply(clean_title)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 65,
      "metadata": {
        "id": "RToqF-2Dzpu8"
      },
      "outputs": [],
      "source": [
        "def remove_suffix(title):\n",
        "    if isinstance(title, str):  # Checking if the input is a string\n",
        "        if title.endswith('the movie'):\n",
        "            return title[:-9].strip()\n",
        "    return title\n",
        "\n",
        "# Applying the remove_suffix function to the 'title' column of each DataFrame\n",
        "df_netflix['title'] = df_netflix['title'].apply(remove_suffix)\n",
        "df_titles['title'] = df_titles['title'].apply(remove_suffix)\n",
        "df_imdb['Series_Title'] = df_imdb['Series_Title'].apply(remove_suffix)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 66,
      "metadata": {
        "id": "ArjUmNne0EIK"
      },
      "outputs": [],
      "source": [
        "merged_df = pd.merge(df_titles, df_credits, on='id', how='inner')\n",
        "remerged_df = pd.merge(merged_df, df_netflix, on='title', how='inner')\n",
        "reremerged_df = pd.merge(remerged_df, df_imdb[['Series_Title', 'Gross']], left_on='title', right_on='Series_Title', how='inner')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 67,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HFePJxs20XvD",
        "outputId": "28b19486-eaa4-4760-aec8-e8c96f48a4be"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            title                 Series_Title\n",
            "271   once upon a time in america  once upon a time in america\n",
            "1760                  udta punjab                  udta punjab\n",
            "148                    goodfellas                   goodfellas\n",
            "1716          beasts of no nation          beasts of no nation\n",
            "669                     inception                    inception\n"
          ]
        }
      ],
      "source": [
        "print(reremerged_df[['title', 'Series_Title']].sample(5))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 68,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Su8KV1K_0Zxx",
        "outputId": "2edeb6e4-8a17-45e0-ab58-7c88bcd66ec0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of mismatches: 0\n"
          ]
        }
      ],
      "source": [
        "mismatches = reremerged_df[reremerged_df['title'] != reremerged_df['Series_Title']]\n",
        "print(f\"Number of mismatches: {len(mismatches)}\")\n",
        "\n",
        "if len(mismatches) > 0:\n",
        "    print(\"Here are some mismatches:\")\n",
        "    print(mismatches[['title', 'Series_Title']].head())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 69,
      "metadata": {
        "id": "HNXtA3w-087G"
      },
      "outputs": [],
      "source": [
        "reremerged_df.drop('Series_Title', axis=1, inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 70,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PVw2v-io1fL5",
        "outputId": "bd851db3-7e07-4c49-d0c1-bd5d4edfc86c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 2479 entries, 0 to 2478\n",
            "Data columns (total 18 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   id               2479 non-null   object \n",
            " 1   title            2479 non-null   object \n",
            " 2   type             2479 non-null   object \n",
            " 3   genres           2479 non-null   object \n",
            " 4   imdb_score       2384 non-null   float64\n",
            " 5   imdb_votes       2384 non-null   float64\n",
            " 6   tmdb_popularity  2479 non-null   float64\n",
            " 7   tmdb_score       2479 non-null   float64\n",
            " 8   person_id        2479 non-null   int64  \n",
            " 9   name             2479 non-null   object \n",
            " 10  character        2368 non-null   object \n",
            " 11  role             2479 non-null   object \n",
            " 12  show_id          2479 non-null   object \n",
            " 13  director         2443 non-null   object \n",
            " 14  cast             2479 non-null   object \n",
            " 15  listed_in        2479 non-null   object \n",
            " 16  description      2479 non-null   object \n",
            " 17  Gross            2192 non-null   object \n",
            "dtypes: float64(4), int64(1), object(13)\n",
            "memory usage: 348.7+ KB\n"
          ]
        }
      ],
      "source": [
        "reremerged_df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 71,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "ao3IaKFl157N",
        "outputId": "73d18e07-4522-42a1-9b19-b73d504ad0a9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        imdb_score    imdb_votes  tmdb_popularity   tmdb_score     person_id\n",
              "count  2384.000000  2.384000e+03      2479.000000  2479.000000  2.479000e+03\n",
              "mean      7.785738  4.760895e+05        31.094015     7.583423  3.849510e+05\n",
              "std       0.797056  4.926980e+05        23.570397     0.670965  5.460216e+05\n",
              "min       3.100000  3.200000e+01         0.849000     3.700000  2.190000e+02\n",
              "25%       7.700000  9.964700e+04        15.070000     7.400000  1.387500e+04\n",
              "50%       7.900000  3.038680e+05        22.225000     7.600000  8.072400e+04\n",
              "75%       8.200000  6.496760e+05        42.131000     8.000000  6.600315e+05\n",
              "max       8.800000  2.294231e+06       134.700000     8.463000  2.435238e+06"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3c94a04a-8808-4312-bab0-a2c843f4b152\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>imdb_score</th>\n",
              "      <th>imdb_votes</th>\n",
              "      <th>tmdb_popularity</th>\n",
              "      <th>tmdb_score</th>\n",
              "      <th>person_id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>2384.000000</td>\n",
              "      <td>2.384000e+03</td>\n",
              "      <td>2479.000000</td>\n",
              "      <td>2479.000000</td>\n",
              "      <td>2.479000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>7.785738</td>\n",
              "      <td>4.760895e+05</td>\n",
              "      <td>31.094015</td>\n",
              "      <td>7.583423</td>\n",
              "      <td>3.849510e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.797056</td>\n",
              "      <td>4.926980e+05</td>\n",
              "      <td>23.570397</td>\n",
              "      <td>0.670965</td>\n",
              "      <td>5.460216e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>3.100000</td>\n",
              "      <td>3.200000e+01</td>\n",
              "      <td>0.849000</td>\n",
              "      <td>3.700000</td>\n",
              "      <td>2.190000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>7.700000</td>\n",
              "      <td>9.964700e+04</td>\n",
              "      <td>15.070000</td>\n",
              "      <td>7.400000</td>\n",
              "      <td>1.387500e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>7.900000</td>\n",
              "      <td>3.038680e+05</td>\n",
              "      <td>22.225000</td>\n",
              "      <td>7.600000</td>\n",
              "      <td>8.072400e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>8.200000</td>\n",
              "      <td>6.496760e+05</td>\n",
              "      <td>42.131000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>6.600315e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>8.800000</td>\n",
              "      <td>2.294231e+06</td>\n",
              "      <td>134.700000</td>\n",
              "      <td>8.463000</td>\n",
              "      <td>2.435238e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c94a04a-8808-4312-bab0-a2c843f4b152')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3c94a04a-8808-4312-bab0-a2c843f4b152 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3c94a04a-8808-4312-bab0-a2c843f4b152');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2ff8bd06-0899-4a9d-85c7-2891aadc825f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ff8bd06-0899-4a9d-85c7-2891aadc825f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2ff8bd06-0899-4a9d-85c7-2891aadc825f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"reremerged_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"imdb_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 840.6395165090375,\n        \"min\": 0.7970558236497034,\n        \"max\": 2384.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7.785738255033557,\n          7.9,\n          2384.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imdb_votes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 748898.4782221388,\n        \"min\": 32.0,\n        \"max\": 2294231.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          476089.50713087246,\n          303868.0,\n          2384.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tmdb_popularity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 863.8143783893482,\n        \"min\": 0.849,\n        \"max\": 2479.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          31.094014521984672,\n          22.225,\n          2479.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tmdb_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 874.2700715466639,\n        \"min\": 0.6709647557320705,\n        \"max\": 2479.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7.5834231544977815,\n          7.6,\n          2479.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"person_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 818851.1809683295,\n        \"min\": 219.0,\n        \"max\": 2435238.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          384950.9911254538,\n          80724.0,\n          2479.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 71
        }
      ],
      "source": [
        "reremerged_df.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 72,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "biNd_3K7187C",
        "outputId": "328d2d8a-7f63-4e30-c0d3-06976a09d8f0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "id                   0\n",
            "title                0\n",
            "type                 0\n",
            "genres               0\n",
            "imdb_score          95\n",
            "imdb_votes          95\n",
            "tmdb_popularity      0\n",
            "tmdb_score           0\n",
            "person_id            0\n",
            "name                 0\n",
            "character          111\n",
            "role                 0\n",
            "show_id              0\n",
            "director            36\n",
            "cast                 0\n",
            "listed_in            0\n",
            "description          0\n",
            "Gross              287\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "print(reremerged_df.isnull().sum())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 73,
      "metadata": {
        "id": "04C-ERHT3OcN"
      },
      "outputs": [],
      "source": [
        "reremerged_df.columns = reremerged_df.columns.str.title()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 74,
      "metadata": {
        "id": "03K7hhEe2Avv"
      },
      "outputs": [],
      "source": [
        "reremerged_df['Imdb_Score'].fillna(reremerged_df['Imdb_Score'].mean(), inplace=True)\n",
        "\n",
        "reremerged_df['Imdb_Votes'].fillna(reremerged_df['Imdb_Votes'].median(), inplace=True)\n",
        "\n",
        "reremerged_df['Tmdb_Score'].fillna(reremerged_df['Tmdb_Score'].mean(), inplace=True)\n",
        "\n",
        "reremerged_df['Director'].fillna('Unknown', inplace=True)\n",
        "\n",
        "reremerged_df['Character'].fillna('Unknown', inplace=True)\n",
        "\n",
        "most_common_cast = reremerged_df['Cast'].mode()[0]\n",
        "reremerged_df['Cast'].fillna(most_common_cast, inplace=True)\n",
        "\n",
        "# Removing commas\n",
        "reremerged_df['Gross'] = reremerged_df['Gross'].replace(',', '', regex=True)\n",
        "\n",
        "# Conversion process\n",
        "reremerged_df['Gross'] = reremerged_df['Gross'].astype(float)\n",
        "\n",
        "# Comma separated values can now be treated as decimals when calculating median\n",
        "gross_median = reremerged_df['Gross'].median()\n",
        "reremerged_df['Gross'].fillna(gross_median, inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 75,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ffS6LiK62Gg6",
        "outputId": "0f8d499c-8c11-4e25-f73a-64cdfd89cb16"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Id                 0\n",
            "Title              0\n",
            "Type               0\n",
            "Genres             0\n",
            "Imdb_Score         0\n",
            "Imdb_Votes         0\n",
            "Tmdb_Popularity    0\n",
            "Tmdb_Score         0\n",
            "Person_Id          0\n",
            "Name               0\n",
            "Character          0\n",
            "Role               0\n",
            "Show_Id            0\n",
            "Director           0\n",
            "Cast               0\n",
            "Listed_In          0\n",
            "Description        0\n",
            "Gross              0\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "print(reremerged_df.isnull().sum())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 76,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5WTRlv_t3h03",
        "outputId": "32e7c6de-1a56-4b13-f282-61d4a5005314"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of duplicate rows: 0\n"
          ]
        }
      ],
      "source": [
        "duplicate_rows = reremerged_df.duplicated().sum()\n",
        "\n",
        "print(\"Number of duplicate rows:\", duplicate_rows)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 77,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "kDtq5DHF6hov",
        "outputId": "7d99c636-8856-4f60-e9f5-8f5fd1dda421"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Id        Title   Type                          Genres  \\\n",
              "0      tm84618  taxi driver  MOVIE              ['drama', 'crime']   \n",
              "1      tm84618  taxi driver  MOVIE              ['drama', 'crime']   \n",
              "2      tm84618  taxi driver  MOVIE              ['drama', 'crime']   \n",
              "3      tm84618  taxi driver  MOVIE              ['drama', 'crime']   \n",
              "4      tm84618  taxi driver  MOVIE              ['drama', 'crime']   \n",
              "...        ...          ...    ...                             ...   \n",
              "2474  ts288540          ray   SHOW  ['drama', 'thriller', 'crime']   \n",
              "2475  ts288540          ray   SHOW  ['drama', 'thriller', 'crime']   \n",
              "2476  ts288540          ray   SHOW  ['drama', 'thriller', 'crime']   \n",
              "2477  ts288540          ray   SHOW  ['drama', 'thriller', 'crime']   \n",
              "2478  ts288540          ray   SHOW  ['drama', 'thriller', 'crime']   \n",
              "\n",
              "      Imdb_Score  Imdb_Votes  Tmdb_Popularity  Tmdb_Score  Person_Id  \\\n",
              "0            8.2    808582.0           40.965       8.179       3748   \n",
              "1            8.2    808582.0           40.965       8.179      14658   \n",
              "2            8.2    808582.0           40.965       8.179       7064   \n",
              "3            8.2    808582.0           40.965       8.179       3739   \n",
              "4            8.2    808582.0           40.965       8.179      48933   \n",
              "...          ...         ...              ...         ...        ...   \n",
              "2474         7.1      8795.0            5.791       6.800      66872   \n",
              "2475         7.1      8795.0            5.791       6.800      67162   \n",
              "2476         7.1      8795.0            5.791       6.800     235529   \n",
              "2477         7.1      8795.0            5.791       6.800     940893   \n",
              "2478         7.1      8795.0            5.791       6.800     133548   \n",
              "\n",
              "                     Name                Character   Role Show_Id  \\\n",
              "0          Robert De Niro            Travis Bickle  ACTOR   s2882   \n",
              "1            Jodie Foster            Iris Steensma  ACTOR   s2882   \n",
              "2           Albert Brooks                      Tom  ACTOR   s2882   \n",
              "3           Harvey Keitel  Matthew 'Sport' Higgins  ACTOR   s2882   \n",
              "4         Cybill Shepherd                    Betsy  ACTOR   s2882   \n",
              "...                   ...                      ...    ...     ...   \n",
              "2474       Manoj Bajpayee              Musafir Ali  ACTOR    s638   \n",
              "2475        Kay Kay Menon          Indrashish Shah  ACTOR    s638   \n",
              "2476  Harshvardhan Kapoor                      Vik  ACTOR    s638   \n",
              "2477        Radhika Madan                     Didi  ACTOR    s638   \n",
              "2478        Rajesh Sharma            Suresh Sharma  ACTOR    s638   \n",
              "\n",
              "                                           Director  \\\n",
              "0                                     Daniel Oriahi   \n",
              "1                                     Daniel Oriahi   \n",
              "2                                     Daniel Oriahi   \n",
              "3                                     Daniel Oriahi   \n",
              "4                                     Daniel Oriahi   \n",
              "...                                             ...   \n",
              "2474  Srijit Mukherji, Vasan Bala, Abhishek Chaubey   \n",
              "2475  Srijit Mukherji, Vasan Bala, Abhishek Chaubey   \n",
              "2476  Srijit Mukherji, Vasan Bala, Abhishek Chaubey   \n",
              "2477  Srijit Mukherji, Vasan Bala, Abhishek Chaubey   \n",
              "2478  Srijit Mukherji, Vasan Bala, Abhishek Chaubey   \n",
              "\n",
              "                                                   Cast  \\\n",
              "0     Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...   \n",
              "1     Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...   \n",
              "2     Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...   \n",
              "3     Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...   \n",
              "4     Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...   \n",
              "...                                                 ...   \n",
              "2474  Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...   \n",
              "2475  Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...   \n",
              "2476  Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...   \n",
              "2477  Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...   \n",
              "2478  Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...   \n",
              "\n",
              "                                            Listed_In  \\\n",
              "0                Comedies, Dramas, Independent Movies   \n",
              "1                Comedies, Dramas, Independent Movies   \n",
              "2                Comedies, Dramas, Independent Movies   \n",
              "3                Comedies, Dramas, Independent Movies   \n",
              "4                Comedies, Dramas, Independent Movies   \n",
              "...                                               ...   \n",
              "2474  International TV Shows, TV Dramas, TV Mysteries   \n",
              "2475  International TV Shows, TV Dramas, TV Mysteries   \n",
              "2476  International TV Shows, TV Dramas, TV Mysteries   \n",
              "2477  International TV Shows, TV Dramas, TV Mysteries   \n",
              "2478  International TV Shows, TV Dramas, TV Mysteries   \n",
              "\n",
              "                                            Description       Gross  \n",
              "0     After his father dies, a young mechanic moves ...  28262574.0  \n",
              "1     After his father dies, a young mechanic moves ...  28262574.0  \n",
              "2     After his father dies, a young mechanic moves ...  28262574.0  \n",
              "3     After his father dies, a young mechanic moves ...  28262574.0  \n",
              "4     After his father dies, a young mechanic moves ...  28262574.0  \n",
              "...                                                 ...         ...  \n",
              "2474  From a satire to a psychological thriller, fou...  75331600.0  \n",
              "2475  From a satire to a psychological thriller, fou...  75331600.0  \n",
              "2476  From a satire to a psychological thriller, fou...  75331600.0  \n",
              "2477  From a satire to a psychological thriller, fou...  75331600.0  \n",
              "2478  From a satire to a psychological thriller, fou...  75331600.0  \n",
              "\n",
              "[2479 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fa5b9dc1-a453-4ffb-b461-dc581af20afd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>Title</th>\n",
              "      <th>Type</th>\n",
              "      <th>Genres</th>\n",
              "      <th>Imdb_Score</th>\n",
              "      <th>Imdb_Votes</th>\n",
              "      <th>Tmdb_Popularity</th>\n",
              "      <th>Tmdb_Score</th>\n",
              "      <th>Person_Id</th>\n",
              "      <th>Name</th>\n",
              "      <th>Character</th>\n",
              "      <th>Role</th>\n",
              "      <th>Show_Id</th>\n",
              "      <th>Director</th>\n",
              "      <th>Cast</th>\n",
              "      <th>Listed_In</th>\n",
              "      <th>Description</th>\n",
              "      <th>Gross</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>tm84618</td>\n",
              "      <td>taxi driver</td>\n",
              "      <td>MOVIE</td>\n",
              "      <td>['drama', 'crime']</td>\n",
              "      <td>8.2</td>\n",
              "      <td>808582.0</td>\n",
              "      <td>40.965</td>\n",
              "      <td>8.179</td>\n",
              "      <td>3748</td>\n",
              "      <td>Robert De Niro</td>\n",
              "      <td>Travis Bickle</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s2882</td>\n",
              "      <td>Daniel Oriahi</td>\n",
              "      <td>Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...</td>\n",
              "      <td>Comedies, Dramas, Independent Movies</td>\n",
              "      <td>After his father dies, a young mechanic moves ...</td>\n",
              "      <td>28262574.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>tm84618</td>\n",
              "      <td>taxi driver</td>\n",
              "      <td>MOVIE</td>\n",
              "      <td>['drama', 'crime']</td>\n",
              "      <td>8.2</td>\n",
              "      <td>808582.0</td>\n",
              "      <td>40.965</td>\n",
              "      <td>8.179</td>\n",
              "      <td>14658</td>\n",
              "      <td>Jodie Foster</td>\n",
              "      <td>Iris Steensma</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s2882</td>\n",
              "      <td>Daniel Oriahi</td>\n",
              "      <td>Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...</td>\n",
              "      <td>Comedies, Dramas, Independent Movies</td>\n",
              "      <td>After his father dies, a young mechanic moves ...</td>\n",
              "      <td>28262574.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>tm84618</td>\n",
              "      <td>taxi driver</td>\n",
              "      <td>MOVIE</td>\n",
              "      <td>['drama', 'crime']</td>\n",
              "      <td>8.2</td>\n",
              "      <td>808582.0</td>\n",
              "      <td>40.965</td>\n",
              "      <td>8.179</td>\n",
              "      <td>7064</td>\n",
              "      <td>Albert Brooks</td>\n",
              "      <td>Tom</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s2882</td>\n",
              "      <td>Daniel Oriahi</td>\n",
              "      <td>Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...</td>\n",
              "      <td>Comedies, Dramas, Independent Movies</td>\n",
              "      <td>After his father dies, a young mechanic moves ...</td>\n",
              "      <td>28262574.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>tm84618</td>\n",
              "      <td>taxi driver</td>\n",
              "      <td>MOVIE</td>\n",
              "      <td>['drama', 'crime']</td>\n",
              "      <td>8.2</td>\n",
              "      <td>808582.0</td>\n",
              "      <td>40.965</td>\n",
              "      <td>8.179</td>\n",
              "      <td>3739</td>\n",
              "      <td>Harvey Keitel</td>\n",
              "      <td>Matthew 'Sport' Higgins</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s2882</td>\n",
              "      <td>Daniel Oriahi</td>\n",
              "      <td>Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...</td>\n",
              "      <td>Comedies, Dramas, Independent Movies</td>\n",
              "      <td>After his father dies, a young mechanic moves ...</td>\n",
              "      <td>28262574.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>tm84618</td>\n",
              "      <td>taxi driver</td>\n",
              "      <td>MOVIE</td>\n",
              "      <td>['drama', 'crime']</td>\n",
              "      <td>8.2</td>\n",
              "      <td>808582.0</td>\n",
              "      <td>40.965</td>\n",
              "      <td>8.179</td>\n",
              "      <td>48933</td>\n",
              "      <td>Cybill Shepherd</td>\n",
              "      <td>Betsy</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s2882</td>\n",
              "      <td>Daniel Oriahi</td>\n",
              "      <td>Odunlade Adekola, Ijeoma Grace Agu, Richard Ak...</td>\n",
              "      <td>Comedies, Dramas, Independent Movies</td>\n",
              "      <td>After his father dies, a young mechanic moves ...</td>\n",
              "      <td>28262574.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2474</th>\n",
              "      <td>ts288540</td>\n",
              "      <td>ray</td>\n",
              "      <td>SHOW</td>\n",
              "      <td>['drama', 'thriller', 'crime']</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8795.0</td>\n",
              "      <td>5.791</td>\n",
              "      <td>6.800</td>\n",
              "      <td>66872</td>\n",
              "      <td>Manoj Bajpayee</td>\n",
              "      <td>Musafir Ali</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s638</td>\n",
              "      <td>Srijit Mukherji, Vasan Bala, Abhishek Chaubey</td>\n",
              "      <td>Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
              "      <td>From a satire to a psychological thriller, fou...</td>\n",
              "      <td>75331600.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2475</th>\n",
              "      <td>ts288540</td>\n",
              "      <td>ray</td>\n",
              "      <td>SHOW</td>\n",
              "      <td>['drama', 'thriller', 'crime']</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8795.0</td>\n",
              "      <td>5.791</td>\n",
              "      <td>6.800</td>\n",
              "      <td>67162</td>\n",
              "      <td>Kay Kay Menon</td>\n",
              "      <td>Indrashish Shah</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s638</td>\n",
              "      <td>Srijit Mukherji, Vasan Bala, Abhishek Chaubey</td>\n",
              "      <td>Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
              "      <td>From a satire to a psychological thriller, fou...</td>\n",
              "      <td>75331600.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2476</th>\n",
              "      <td>ts288540</td>\n",
              "      <td>ray</td>\n",
              "      <td>SHOW</td>\n",
              "      <td>['drama', 'thriller', 'crime']</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8795.0</td>\n",
              "      <td>5.791</td>\n",
              "      <td>6.800</td>\n",
              "      <td>235529</td>\n",
              "      <td>Harshvardhan Kapoor</td>\n",
              "      <td>Vik</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s638</td>\n",
              "      <td>Srijit Mukherji, Vasan Bala, Abhishek Chaubey</td>\n",
              "      <td>Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
              "      <td>From a satire to a psychological thriller, fou...</td>\n",
              "      <td>75331600.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2477</th>\n",
              "      <td>ts288540</td>\n",
              "      <td>ray</td>\n",
              "      <td>SHOW</td>\n",
              "      <td>['drama', 'thriller', 'crime']</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8795.0</td>\n",
              "      <td>5.791</td>\n",
              "      <td>6.800</td>\n",
              "      <td>940893</td>\n",
              "      <td>Radhika Madan</td>\n",
              "      <td>Didi</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s638</td>\n",
              "      <td>Srijit Mukherji, Vasan Bala, Abhishek Chaubey</td>\n",
              "      <td>Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
              "      <td>From a satire to a psychological thriller, fou...</td>\n",
              "      <td>75331600.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2478</th>\n",
              "      <td>ts288540</td>\n",
              "      <td>ray</td>\n",
              "      <td>SHOW</td>\n",
              "      <td>['drama', 'thriller', 'crime']</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8795.0</td>\n",
              "      <td>5.791</td>\n",
              "      <td>6.800</td>\n",
              "      <td>133548</td>\n",
              "      <td>Rajesh Sharma</td>\n",
              "      <td>Suresh Sharma</td>\n",
              "      <td>ACTOR</td>\n",
              "      <td>s638</td>\n",
              "      <td>Srijit Mukherji, Vasan Bala, Abhishek Chaubey</td>\n",
              "      <td>Manoj Bajpayee, Gajraj Rao, Kay Kay Menon, Ali...</td>\n",
              "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
              "      <td>From a satire to a psychological thriller, fou...</td>\n",
              "      <td>75331600.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2479 rows × 18 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa5b9dc1-a453-4ffb-b461-dc581af20afd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fa5b9dc1-a453-4ffb-b461-dc581af20afd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fa5b9dc1-a453-4ffb-b461-dc581af20afd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2b0b4dd8-94c1-4cb4-afc2-7173532b0c41\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b0b4dd8-94c1-4cb4-afc2-7173532b0c41')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2b0b4dd8-94c1-4cb4-afc2-7173532b0c41 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_491a92ed-7d8e-4756-8af2-14774556b5aa\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('reremerged_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_491a92ed-7d8e-4756-8af2-14774556b5aa button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('reremerged_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "reremerged_df",
              "summary": "{\n  \"name\": \"reremerged_df\",\n  \"rows\": 2479,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 69,\n        \"samples\": [\n          \"tm32885\",\n          \"tm84618\",\n          \"tm244259\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 67,\n        \"samples\": [\n          \"haider\",\n          \"3 idiots\",\n          \"goodfellas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"SHOW\",\n          \"MOVIE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 53,\n        \"samples\": [\n          \"['action', 'comedy', 'scifi']\",\n          \"['action', 'drama', 'crime']\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Imdb_Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7816280015436182,\n        \"min\": 3.1,\n        \"max\": 8.8,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          8.8,\n          7.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Imdb_Votes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 484291.6006505402,\n        \"min\": 32.0,\n        \"max\": 2294231.0,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          815.0,\n          390739.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tmdb_Popularity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.570396740800863,\n        \"min\": 0.849,\n        \"max\": 134.7,\n        \"num_unique_values\": 69,\n        \"samples\": [\n          6.848,\n          40.965\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tmdb_Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6709647557320705,\n        \"min\": 3.7,\n        \"max\": 8.463,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.1,\n          7.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Person_Id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 546021,\n        \"min\": 219,\n        \"max\": 2435238,\n        \"num_unique_values\": 2322,\n        \"samples\": [\n          253155,\n          1632073\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2321,\n        \"samples\": [\n          \"Carlos Peralta\",\n          \"Michael Bacall\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Character\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2122,\n        \"samples\": [\n          \"Jane Banner\",\n          \"Wiseguy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Role\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"DIRECTOR\",\n          \"ACTOR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Show_Id\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 67,\n        \"samples\": [\n          \"s4726\",\n          \"s1115\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 60,\n        \"samples\": [\n          \"Daniel Oriahi\",\n          \"Sergio Leone\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cast\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 67,\n        \"samples\": [\n          \"Shahid Kapoor, Tabu, Shraddha Kapoor, Kay Kay Menon, Irrfan Khan, Narendra Jha\",\n          \"Aamir Khan, Kareena Kapoor, Madhavan, Sharman Joshi, Omi Vaidya, Boman Irani, Mona Singh, Javed Jaffrey\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Listed_In\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 42,\n        \"samples\": [\n          \"Action & Adventure, Thrillers\",\n          \"Dramas, Independent Movies, International Movies\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Description\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 67,\n        \"samples\": [\n          \"Shahid Kapoor delivers a searing performance in this Bollywood take on Hamlet that unfolds amid Kashmiri culture and history.\",\n          \"While attending one of India's premier colleges, three miserable engineering students and best friends struggle to beat the school's draconian system.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gross\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67613017.18402754,\n        \"min\": 7461.0,\n        \"max\": 292576195.0,\n        \"num_unique_values\": 54,\n        \"samples\": [\n          410800.0,\n          35061555.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 77
        }
      ],
      "source": [
        "reremerged_df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 78,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "oQmKBgrf3lV8",
        "outputId": "9629cde0-65fc-4315-e4ba-fda84ddc5895"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAqYAAAIjCAYAAADRBtn0AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABhBUlEQVR4nO3deVxVdf7H8fdlBwF3ExPBJdzNfU1tUzN0rExTbMKtbHJ+5lSW2aSomZrl2LSbucyYWanVJJlLmntqlpZpbonmLioCooBwfn8YN69s58LFe4DX8/HgMXPP+dxzP9zv1d6e7znfazMMwxAAAADgZh7ubgAAAACQCKYAAACwCIIpAAAALIFgCgAAAEsgmAIAAMASCKYAAACwBIIpAAAALIFgCgAAAEsgmAIAAMASCKbADTR37lzZbDbFxcW57JhxcXGy2WyaO3euy45p1u23365GjRrd8Ne1Kt4P9xg4cKDCw8Pd3QYAFyCYotg7ePCghg0bplq1asnPz0/BwcHq0KGDXn/9dV26dMnd7bnMggULNGPGDHe3USDHjx9XTEyMduzYUaSvk1MwDA8Pl81m0913353jc95//33ZbDbZbDZ9//339u0xMTH27TabTQEBAapRo4Z69uypOXPmKDU11eX9p6Wl6fXXX1ezZs0UHByscuXKqWHDhnrsscf066+/uvz1SousfxDm95MVbrPG3sPDQ7///nu24yUmJsrf3182m01///vf7duz/pGY9ePt7a1KlSqpffv2GjNmjI4cOZLtWN9++222PipUqKC2bdvqww8/NP07fvnll+rcubOqVKmigIAA1apVS3379tXXX3/t/BsGuJGXuxsACiM2NlZ9+vSRr6+vHnnkETVq1EhpaWnasGGDRo0apV9++UUzZ850d5susWDBAu3atUsjR4502B4WFqZLly7J29vbPY2ZcPz4cY0fP17h4eFq2rTpDX99Pz8/rVmzRidPnlTVqlUd9n344Yfy8/PT5cuXc3zuO++8o8DAQKWmpurYsWNavny5Bg8erBkzZmjp0qUKDQ11WZ+9e/fWsmXL1L9/fz366KNKT0/Xr7/+qqVLl6p9+/aqV6+ey16rNOnUqZP++9//OmwbOnSoWrdurccee8y+LTAw0KHG19dXH330kZ599lmH7UuWLMnz9fr37697771XmZmZOn/+vLZt26YZM2bo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affu3Q7Pc/Xn2tPTUz4+Pvaez507pytXrqhly5b64YcfstU/9NBDKl++vP1x1rj89ttvkv78XEdHR6ts2bL2ui5duqhBgwa59lFYUVFROnDggLZt22b/X2en8a+V2+dm7NixWrlypVauXKmPP/5Y/fv31wsvvKDXX38932OOHz9eCxYsULNmzbR8+XK98MILatGihZo3b+5w+c7ixYtVqVIl/d///V+2Y1z7ufH09NSIESMc9j/99NMyDEPLli1z2N65c2eH998wDC1evFg9e/aUYRj2z018fLy6deumCxcu5Dj+QBaCKYql4OBgSdn/cs/N4cOH5eHhoTp16jhsr1q1qsqVK6fDhw87bK9Zs2aux7p+3/79+yVd/Q975cqVHX5mzZql1NRUXbhwIdfj/fLLL7r//vtVtmxZBQcHq3Llynr44YclKc/n5Sbrd7n28oMs9evXt4eLa9WoUcPhcVZAOH/+fL6vV61aNZUpU8ZhW0REhCSZWq+1Y8eO2r59uy5duqT169crJCREzZs316233mqfzt+wYUOBA+S1oqKitHv3bu3cuVMLFixQv3797P9BdlZycrKk7P84Ksz74evrqxdeeEF79uzR8ePH9dFHH6lt27b2qVJJOnPmjBITE/NdL/Xw4cO5fgay9l/L1Z9rSZo3b56aNGkiPz8/VaxYUZUrV1ZsbGyOz8vvM5jV7y233JLtuTn9nq7SrFkz1atXTwsWLNCHH36oqlWr6s477yzw8XL73DRu3Fh333237r77bvXt21fz589Xjx49NHr0aJ05cybf4/bv31/r16/X+fPntWLFCkVFRenHH39Uz5497StOHDx4UHXr1s3zMpHDhw+rWrVq2foz+7k5c+aMEhISNHPmzGyfm0GDBkmSTp8+ne/vg9KLa0xRLAUHB6tatWratWuXU88zG0KuPXOU376ss0bTpk3LdSmk3K4HTUhIUOfOnRUcHKwJEyaodu3a8vPz0w8//KDnnnsuzzNSruTp6ZnjduO6mx2Kwm233ab09HRt3rxZ69evtwfQjh07av369fr111915swZlwTTNm3aqHbt2ho5cqQOHTpUqDNfWZ+96/+x4yohISHq16+fevfurYYNG+qTTz4p0i9RcOXnWpLmz5+vgQMH6r777tOoUaNUpUoVeXp6avLkyQ432mRx52cwP1FRUXrnnXcUFBSkhx56SB4eBT+ns2vXLlWpUsX+j+u83HXXXVq6dKm2bt1q+prW4OBgdenSRV26dJG3t7fmzZunLVu2qHPnzgXuOS+5fW4efvhhRUdH5/icJk2aFEkvKBkIpii2evTooZkzZ2rz5s1q165dnrVhYWHKzMzU/v377f/yl6RTp04pISHBfuNJQWTdSBMcHJzrIu65+fbbb3X27FktWbLE4caeQ4cOZas1G6qzfpe9e/dm2/frr7+qUqVK2c7oFcbx48d18eJFh2Pu27dPkuw3WeXVe+vWreXj46P169dr/fr1GjVqlKSrN568//77+uabb+yPXaF///566aWXVL9+/UKtqZq1Lub1l3yYeT+c4e3trSZNmmj//v2Kj4+3h5r8/lEWFhaW62cga39eCvO5lqRFixapVq1aWrJkicP4jxs3zuljSX/2m3Um91o5/Z6uFBUVpbFjx+rEiRPZ1kN1xubNm3Xw4EH7jEh+rly5IunPs6zOatmypebNm6cTJ05IujqmW7ZsUXp6eq43/IWFhWnVqlVKSkpyOGtq9nNTuXJlBQUFKSMjo0CfG4CpfBRbzz77rMqUKaOhQ4fq1KlT2fYfPHjQfn3WvffeK0nZvjlp+vTpklSgO2yztGjRQrVr19arr76a439A8pqGyzpLdO1ZobS0NL399tvZasuUKWNqaj8kJERNmzbVvHnzHJZh2rVrl1asWGF/L1zlypUreu+99+yP09LS9N5776ly5cpq0aKFvXdJDv1k8fPzU6tWrfTRRx/pyJEjDmdML126pH//+9+qXbt2jkuCFcTQoUM1btw4vfbaawU+xoIFCzRr1iy1a9dOd911l8M+M+9HTvbv35/jNwMlJCRo8+bNKl++vCpXriwPDw/dd999+vLLLx2+qSpL1mfp3nvv1datW+3X6UpXlwGaOXOmwsPD870uszCfaynnz/aWLVsc+nHGtZ/ra/8crFy5Mtv1sq5Wu3ZtzZgxQ5MnT85zJYK8HD58WAMHDpSPj4/9H1/5Wbp0qSTp1ltvzbUmJSUl1/c063rQrEsdevfurfj4eL355pvZaq/93GRkZGSr+de//iWbzabu3bvn2bOnp6d69+6txYsX5/iPJzOXJaB044wpiq3atWtrwYIFeuihh1S/fn2Hb37atGmTPv30Uw0cOFDS1b/Yo6OjNXPmTPv0+datWzVv3jzdd999uuOOOwrch4eHh2bNmqXu3burYcOGGjRokG6++WYdO3ZMa9asUXBwsL788sscn9u+fXuVL19e0dHRGjFihGw2m/773//mOH3ZokULffzxx3rqqafUqlUrBQYGqmfPnjked9q0aerevbvatWunIUOG2JeLKlu2rGJiYgr8u+akWrVqmjp1quLi4hQREaGPP/5YO3bs0MyZM+1nZWrXrq1y5crp3XffVVBQkMqUKaM2bdrYr0/r2LGjpkyZorJly6px48aSri6DU7duXe3du9c+jq4QFhbm1HuwaNEiBQYGKi0tzf7NTxs3btStt96qTz/9NFu9mfcjJzt37lRUVJS6d++ujh07qkKFCjp27JjmzZun48ePa8aMGfaw9/LLL2vFihXq3LmzHnvsMdWvX18nTpzQp59+qg0bNqhcuXIaPXq0PvroI3Xv3l0jRoxQhQoVNG/ePB06dEiLFy/Odzq6MJ9r6eqMxpIlS3T//fcrMjJShw4d0rvvvqsGDRoU+Azg5MmTFRkZqdtuu02DBw/WuXPn9MYbb6hhw4YFPqZZ166JnJ8ffvhB8+fPV2ZmphISErRt2zYtXrzY/uc7p6ns9evX268FPXfunP73v/9p7dq16tevX57f+JWSkqL27durbdu2uueeexQaGqqEhAR9/vnnWr9+ve677z41a9ZMkvTII4/oP//5j5566ilt3bpVHTt21MWLF7Vq1So98cQT6tWrl3r27Kk77rhDL7zwguLi4nTrrbdqxYoV+uKLLzRy5Ej7mfS8TJkyRWvWrFGbNm306KOPqkGDBjp37px++OEHrVq1SufOnTP9XqIUctNqAIDL7Nu3z3j00UeN8PBww8fHxwgKCjI6dOhgvPHGGw7LLaWnpxvjx483atasaXh7exuhoaHG888/71BjGH8uL3S93L6hJcuPP/5oPPDAA0bFihUNX19fIywszOjbt6/xzTff2GtyWi5q48aNRtu2bQ1/f3+jWrVqxrPPPmssX77ckGSsWbPGXpecnGxERUUZ5cqVc1geJ6flogzDMFatWmV06NDB8Pf3N4KDg42ePXsau3fvdqjJbUkks99QlbU80/fff2+0a9fO8PPzM8LCwow333wzW+0XX3xhNGjQwPDy8srWb2xsrCHJ6N69u8Nzhg4dakgyPvjggzz7uL6fa+U2ntfKa7morB8/Pz+jevXqRo8e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HttsNj3++OPZaocPHy6bzaaBAwdmq7fZbPL29tZNN92kLl26aPbs2crMzCx0f2fOnNHf/vY31ahRQ76+vqpataq6deumjRs3FvrYAGBFBFMAuEZoaKgWLlyoS5cu2bddvnxZCxYsUI0aNbLV33PPPTpx4oTi4uK0bNky3XHHHXryySfVo0cPXblypVC99O7dWz/++KPmzZunffv26X//+59uv/12nT17tlDHzUtaWlqRHRsA8kMwBYBrNG/eXKGhoVqyZIl925IlS1SjRg01a9YsW33Wmcybb75ZzZs315gxY/TFF19o2bJlmjt3rkPtiRMn1L17d/n7+6tWrVpatGhRrn0kJCRo/fr1mjp1qu644w6FhYWpdevWev755/WXv/zFoW7YsGG66aab5Ofnp0aNGmnp0qX2/YsXL1bDhg3l6+ur8PBwvfbaaw6vEx4erokTJ+qRRx5RcHCwHnvsMUnShg0b1LFjR/n7+ys0NFQjRozQxYsXnXovAcBZBFMAuM7gwYM1Z84c++PZs2dr0KBBpp9/55136tZbb3UIt5L04osvqnfv3tq5c6cGDBigfv36ac+ePTkeIzAwUIGBgfr888+VmpqaY01mZqa6d++ujRs3av78+dq9e7emTJkiT09PSdL27dvVt29f9evXTz///LNiYmL04osvZgvMr776qm699Vb9+OOPevHFF3Xw4EHdc8896t27t3766Sd9/PHH2rBhg/7+97+bfg8AoCBshmEY7m4CANxh4MCBSkhIsN+UlPX4/fffV2hoqPbu3StJqlevnn7//XcNHTpU5cqVswe7659/rX79+umnn37S7t27Jcl+7eo777xjr2nbtq2aN2+ut99+O8f+Fi9erEcffVSXLl1S8+bN1blzZ/Xr109NmjSRJK1YsULdu3fXnj17FBERke35AwYM0JkzZ7RixQr7tmeffVaxsbH65ZdfJF09Y9qsWTN99tln9pqhQ4fK09NT7733nn3bhg0b1LlzZ128eFF+fn75vbUAUCCcMQWA61SuXFmRkZGaO3eu5syZo8jISFWqVMmpYxiGIZvN5rCtXbt22R7ndsZUunqN6fHjx/W///1P99xzj7799ls1b97cHox37Nih6tWr5xhKJWnPnj3q0KGDw7YOHTpo//79ysjIsG9r2bKlQ83OnTs1d+5c+1nbwMBAdevWTZmZmTp06FC+vzsAFJSXuxsAACsaPHiwfer6rbfecvr5e/bsUc2aNQvdh5+fn7p06aIuXbroxRdf1NChQzVu3DgNHDhQ/v7+hT6+JJUpU8bhcXJysoYNG6YRI0Zkq83pBjAAcBXOmAJADu655x6lpaUpPT1d3bp1c+q5q1ev1s8//6zevXs7bP/uu++yPa5fv75Tx27QoIH9JqQmTZro6NGj2rdvX4619evXz7a01MaNGxUREWG/DjUnzZs31+7du1WnTp1sPz4+Pk71CwDO4IwpAOTA09PTPs2eV4hLTU3VyZMnlZGRoVOnTunrr7/W5MmT1aNHDz3yyCMOtZ9++qlatmyp2267TR9++KG2bt2qDz74IMfjnj17Vn369NHgwYPVpEkTBQUF6fvvv9crr7yiXr16SZI6d+6sTp06qXfv3po+fbrq1KmjX3/9VTabTffcc4+efvpptWrVShMnTtRDDz2kzZs3680338z1mtYszz33nNq2bau///3vGjp0qMqUKaPdu3dr5cqVevPNN515GwHAKQRTAMhFcHBwvjVff/21QkJC5OXlpfLly+vWW2/Vv//9b0VHR8vDw3FSavz48Vq4cKGeeOIJhYSE6KOPPlKDBg1yPG5gYKDatGmjf/3rXzp48KDS09MVGhqqRx99VGPGjLHXLV68WM8884z69++vixcvqk6dOpoyZYqkq2c+P/nkE40dO1YTJ05USEiIJkyY4PAlATlp0qSJ1q5dqxdeeEEdO3aUYRiqXbu2HnrooXzfDwAoDO7KBwAAgCVwjSkAAAAsgWAKAAAASyCYAgAAwBIIpgAAALAEgikAAAAsgWAKAAAASyCYAgAAwBIIpgAAALAEgikAAAAsgWAKAAAASyCYAgAAwBL+H3nKQA3auzFpAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "plt.scatter(reremerged_df['Imdb_Score'], reremerged_df['Tmdb_Score'], alpha=0.5)\n",
        "plt.title('Correlation btw IMDb Score and TMDB Score')\n",
        "plt.xlabel('IMDb Score')\n",
        "plt.ylabel('TMDB Score')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 79,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 556
        },
        "id": "MHZt43EH3olR",
        "outputId": "2275d8a3-0c8f-40f9-f335-8477f2db731a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "top_genres = reremerged_df['Genres'].value_counts().head(10).index\n",
        "\n",
        "filtered_df = reremerged_df[reremerged_df['Genres'].isin(top_genres)]\n",
        "\n",
        "plt.figure(figsize=(12, 8))\n",
        "sns.boxplot(x='Genres', y='Imdb_Score', data=filtered_df)\n",
        "plt.title('Audience Scores by Genre')\n",
        "plt.xlabel('Genres')\n",
        "plt.ylabel('IMDb Score')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 80,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "3eoMpY9t3riR",
        "outputId": "35f5f6ac-2e44-4f00-c870-a82fec584cdb"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "director_avg_imdb_scores = reremerged_df.groupby('Name')['Imdb_Score'].mean().reset_index()\n",
        "plt.figure(figsize=(12, 8))\n",
        "sns.barplot(x='Name', y='Imdb_Score', data=director_avg_imdb_scores.head(10))\n",
        "plt.title('Top 10 Directors by Average IMDb Score')\n",
        "plt.xlabel('Director')\n",
        "plt.ylabel('Average IMDb Score')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 81,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 524
        },
        "id": "uvNk5vZC3uJJ",
        "outputId": "bcd33def-c299-4a5a-dd48-9777c45e07df"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure(figsize=(8, 6))\n",
        "plt.scatter(reremerged_df['Gross'], reremerged_df['Imdb_Score'], alpha=0.5)\n",
        "plt.title('IMDb Scores vs. Gross Income')\n",
        "plt.xlabel('Gross Income')\n",
        "plt.ylabel('IMDb Score')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 82,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 378
        },
        "id": "uI7oBMbcxH_Y",
        "outputId": "15c6bbe9-712b-40a2-e27a-181c3a87e97e"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure(figsize=(12, 6)) #\n",
        "sns.boxplot(x=reremerged_df['Gross'])\n",
        "plt.title('Boxplot of Gross Income')\n",
        "plt.xlabel('Gross Income')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 83,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 378
        },
        "id": "ahsE18suxH_Y",
        "outputId": "5b9256ac-e6d9-449c-b6e1-9bc3dde10eeb"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "sns.boxplot(x=reremerged_df['Imdb_Score'])\n",
        "plt.title('Boxplot of Imdb_Score')\n",
        "plt.xlabel('Imdb_Score')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 84,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d_x25br3x5QC",
        "outputId": "60738740-c722-4d1b-9659-b8532129877f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "location of all outliers: (array([1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,\n",
            "       1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,\n",
            "       1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,\n",
            "       1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,\n",
            "       1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,\n",
            "       1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,\n",
            "       1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,\n",
            "       1997, 1998, 1999, 2000, 2001, 2002, 2420, 2421, 2422, 2423, 2424,\n",
            "       2425, 2426, 2435, 2436, 2437]),)\n",
            "gross outliers location: (array([623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635,\n",
            "       636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648,\n",
            "       649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661,\n",
            "       662, 663, 664, 665, 666, 667, 668, 669, 670]),)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-84-79332f76381f>:10: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  reremerged_df['Imdb_Score'].loc[outliers[0]] = reremerged_df['Imdb_Score'].mean()\n"
          ]
        }
      ],
      "source": [
        "from scipy import stats\n",
        "z_scores = stats.zscore(reremerged_df['Imdb_Score'])\n",
        "\n",
        "threshold = 3\n",
        "outliers = np.where(np.abs(z_scores) > threshold)\n",
        "\n",
        "print(\"location of all outliers:\", outliers)\n",
        "\n",
        "#replace outliers with average\n",
        "reremerged_df['Imdb_Score'].loc[outliers[0]] = reremerged_df['Imdb_Score'].mean()\n",
        "\n",
        "#outliers for gross\n",
        "z_scores_gross = stats.zscore(reremerged_df['Gross'])\n",
        "outliers_gross = np.where(np.abs(z_scores_gross) > threshold)\n",
        "print(\"gross outliers location:\", outliers_gross)\n",
        "#filling outliers with median\n",
        "median_value = reremerged_df['Gross'].median()\n",
        "reremerged_df.loc[outliers_gross[0], 'Gross'] = median_value"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 85,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 738
        },
        "id": "8UelXvE1x9SD",
        "outputId": "d88b1fe8-8f35-4086-ed8a-d706257100c0"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Boxplot: Organized data for 'Imdb_Score'\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.boxplot(x=reremerged_df['Imdb_Score'])\n",
        "plt.title('Boxplot of IMDb Score After Outlier Treatment')\n",
        "plt.xlabel('IMDb Score')\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "\n",
        "# Boxplot: Organized data for 'Gross'\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.boxplot(x=reremerged_df['Gross'])\n",
        "plt.title('Boxplot of Gross Income After Outlier Treatment')\n",
        "plt.xlabel('Gross Income')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 86,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 827
        },
        "id": "HQ0zEddP16py",
        "outputId": "04efbf2e-764e-434a-f737-2f80c829e9a0"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "\n",
        "# Histogram: Gross Income\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.histplot(reremerged_df['Gross'], bins=30, kde=True)\n",
        "plt.title('Distribution of Gross Income After Outlier Treatment')\n",
        "plt.xlabel('Gross Income')\n",
        "plt.ylabel('Frequency')\n",
        "plt.show()\n",
        "\n",
        "# Histogram: IMDb Score\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.histplot(reremerged_df['Imdb_Score'], bins=30, kde=True)\n",
        "plt.title('Distribution of IMDb Score After Outlier Treatment')\n",
        "plt.xlabel('IMDb Score')\n",
        "plt.ylabel('Frequency')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 87,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 415
        },
        "id": "uT5cuByo2wgC",
        "outputId": "1df82bba-60e5-47d1-e2db-902493b0b255"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Gross Income by Director\n",
        "top_directors = reremerged_df['Director'].value_counts().nlargest(10).index\n",
        "filtered_df = reremerged_df[reremerged_df['Director'].isin(top_directors)]\n",
        "\n",
        "plt.figure(figsize=(14, 7))\n",
        "sns.boxplot(x='Director', y='Gross', data=filtered_df)\n",
        "plt.title('Gross Income by Top 10 Directors')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "IY3qKBp0J0-H"
      },
      "execution_count": 87,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 88,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z8tUUxbxj99x",
        "outputId": "a49718d2-b1d7-48d5-9d7b-bb29a6b9116e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Id', 'Title', 'Type', 'Genres', 'Imdb_Score', 'Imdb_Votes',\n",
            "       'Tmdb_Popularity', 'Tmdb_Score', 'Person_Id', 'Name', 'Character',\n",
            "       'Role', 'Show_Id', 'Director', 'Cast', 'Listed_In', 'Description',\n",
            "       'Gross'],\n",
            "      dtype='object')\n"
          ]
        }
      ],
      "source": [
        "\n",
        "print(reremerged_df.columns)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 89,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kUaxp4BGo-R8",
        "outputId": "e053abd7-b403-4cb5-8227-80d8957c084b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               Director             Name              Genres\n",
            "count              2479             2479                2479\n",
            "unique               60             2321                  53\n",
            "top     Martin Scorsese  Martin Scorsese  ['drama', 'crime']\n",
            "freq                387                5                 302\n"
          ]
        }
      ],
      "source": [
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "\n",
        "df = reremerged_df\n",
        "\n",
        "# General statistics of important features\n",
        "important_features = ['Director', 'Name', 'Genres']\n",
        "print(df[important_features].describe(include=[object, np.number]))\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 90,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fjbYbC_Mred5",
        "outputId": "ffc9f7ca-1c6f-40a0-aa9c-94ee46b48d52"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Id', 'Title', 'Type', 'Genres', 'Imdb_Score', 'Imdb_Votes',\n",
            "       'Tmdb_Popularity', 'Tmdb_Score', 'Person_Id', 'Name', 'Character',\n",
            "       'Role', 'Show_Id', 'Director', 'Description', 'Gross'],\n",
            "      dtype='object')\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "\n",
        "\n",
        "df = reremerged_df\n",
        "\n",
        "# Columns to remove\n",
        "columns_to_remove = ['Cast', 'Listed_In']\n",
        "\n",
        "# Remove columns\n",
        "df_cleaned = df.drop(columns=columns_to_remove)\n",
        "\n",
        "\n",
        "\n",
        "print(df_cleaned.columns)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 91,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QRFFkNuXzZm4",
        "outputId": "012c5a31-1340-4fe8-c9bf-fb0929fb13d5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n",
            "  warnings.warn(\n"
          ]
        }
      ],
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import OneHotEncoder\n",
        "from sklearn.linear_model import Ridge\n",
        "from sklearn.metrics import mean_squared_error\n",
        "\n",
        "# selecting the relevant columns\n",
        "selected_columns = ['Title', 'Name', 'Role', 'Gross', 'Imdb_Score']\n",
        "df_selected = df[selected_columns]\n",
        "\n",
        "# Filtering getting only actor and director lines\n",
        "df_filtered = df_selected[df_selected['Role'].isin(['ACTOR', 'DIRECTOR'])]\n",
        "\n",
        "# getting the Gross and IMDb Score averages\n",
        "df_grouped = df_filtered.groupby(['Title', 'Name', 'Role']).agg({\n",
        "    'Gross': 'mean',\n",
        "    'Imdb_Score': 'mean'\n",
        "}).reset_index()\n",
        "\n",
        "# Converting categorical data (One-Hot Encoding)\n",
        "encoder = OneHotEncoder(sparse=False)\n",
        "X = encoder.fit_transform(df_grouped[['Name', 'Role']])\n",
        "\n",
        "#Target variables\n",
        "y_gross = df_grouped['Gross']\n",
        "y_imdb = df_grouped['Imdb_Score']\n",
        "\n",
        "# Separating the data set into training and testing\n",
        "X_train_gross, X_test_gross, y_train_gross, y_test_gross = train_test_split(X, y_gross, test_size=0.2, random_state=42)\n",
        "X_train_imdb, X_test_imdb, y_train_imdb, y_test_imdb = train_test_split(X, y_imdb, test_size=0.2, random_state=42)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 92,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Zc9ZgHyDzfip",
        "outputId": "b6515def-e2d5-4852-a5eb-eb210814d673"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Gross Estimated MSE: 3521401035152586.0\n",
            "IMDb Skoru Tahmini MSE: 0.29543949555022075\n",
            "Estimated Gross values: [53780920.94845701 53780920.94845701 53780920.94845701 27341265.47422852\n",
            " 53780920.94845701]\n",
            "Predicted IMDb Score values: [7.88571724 7.88571724 7.88571724 7.99285862 7.88571724]\n"
          ]
        }
      ],
      "source": [
        "# Ridge Regression Model creation and training\n",
        "model_gross = Ridge()\n",
        "model_gross.fit(X_train_gross, y_train_gross)\n",
        "\n",
        "model_imdb = Ridge()\n",
        "model_imdb.fit(X_train_imdb, y_train_imdb)\n",
        "\n",
        "\n",
        "y_pred_gross = model_gross.predict(X_test_gross)\n",
        "y_pred_imdb = model_imdb.predict(X_test_imdb)\n",
        "\n",
        "# Evaluating model performance\n",
        "mse_gross = mean_squared_error(y_test_gross, y_pred_gross)\n",
        "mse_imdb = mean_squared_error(y_test_imdb, y_pred_imdb)\n",
        "\n",
        "# First few lines review of Forecast Results\n",
        "predicted_gross = y_pred_gross[:5]\n",
        "predicted_imdb = y_pred_imdb[:5]\n",
        "\n",
        "# model performance and prediction results\n",
        "print(f'Gross Estimated MSE: {mse_gross}')\n",
        "print(f'IMDb Skoru Tahmini MSE: {mse_imdb}')\n",
        "print(\"Estimated Gross values:\", predicted_gross)\n",
        "print(\"Predicted IMDb Score values:\", predicted_imdb)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Hiperparametre grid\n",
        "param_grid = {'alpha': [0.01, 0.1, 1, 10, 100]}\n",
        "\n",
        "# Gross için Grid Search\n",
        "grid_search_gross = GridSearchCV(Ridge(), param_grid, cv=5, scoring='neg_mean_squared_error')\n",
        "grid_search_gross.fit(X_train_gross, y_train_gross)\n",
        "\n",
        "# En iyi parametreleri al\n",
        "best_alpha_gross = grid_search_gross.best_params_['alpha']\n",
        "print(f'Gross modeli için en iyi alpha: {best_alpha_gross}')\n",
        "\n",
        "# Gross modelini en iyi parametrelerle eğit\n",
        "model_gross = Ridge(alpha=best_alpha_gross)\n",
        "model_gross.fit(X_train_gross, y_train_gross)\n",
        "y_pred_gross = model_gross.predict(X_test_gross)\n",
        "mse_gross = mean_squared_error(y_test_gross, y_pred_gross)\n",
        "print(f'Gross Estimated MSE: {mse_gross}')\n",
        "\n",
        "# IMDb için Grid Search\n",
        "grid_search_imdb = GridSearchCV(Ridge(), param_grid, cv=5, scoring='neg_mean_squared_error')\n",
        "grid_search_imdb.fit(X_train_imdb, y_train_imdb)\n",
        "\n",
        "# En iyi parametreleri al\n",
        "best_alpha_imdb = grid_search_imdb.best_params_['alpha']\n",
        "print(f'IMDb modeli için en iyi alpha: {best_alpha_imdb}')\n",
        "\n",
        "# IMDb modelini en iyi parametrelerle eğit\n",
        "model_imdb = Ridge(alpha=best_alpha_imdb)\n",
        "model_imdb.fit(X_train_imdb, y_train_imdb)\n",
        "y_pred_imdb = model_imdb.predict(X_test_imdb)\n",
        "mse_imdb = mean_squared_error(y_test_imdb, y_pred_imdb)\n",
        "print(f'IMDb Skoru Tahmini MSE: {mse_imdb}')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U3vmYeqBGypG",
        "outputId": "f4aa861c-8885-43f7-b5d5-1bd0d88e0701"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Gross modeli için en iyi alpha: 10\n",
            "Gross Estimated MSE: 3567758694301621.0\n",
            "IMDb modeli için en iyi alpha: 10\n",
            "IMDb Skoru Tahmini MSE: 0.2947524400994122\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.boxplot(x=df_grouped['Gross'])\n",
        "plt.title('Gross Value Boxplot')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "ZjbKn3ShIwAt",
        "outputId": "b4fcd397-3297-4605-f1ca-7e7374e30272"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Aşırı değerleri tespit etmek\n",
        "Q1 = df_grouped['Gross'].quantile(0.25)\n",
        "Q3 = df_grouped['Gross'].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "lower_bound = Q1 - 1.5 * IQR\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "outliers = df_grouped[(df_grouped['Gross'] < lower_bound) | (df_grouped['Gross'] > upper_bound)]\n",
        "print(\"Aşırı Değerler:\\n\", outliers)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ea4JPRveJIjx",
        "outputId": "2a9dcd3c-33fb-4ebf-e18e-179b6bacadcf"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Aşırı Değerler:\n",
            "                          Title                  Name   Role        Gross  \\\n",
            "309              casino royale                   Ade  ACTOR  167445960.0   \n",
            "310              casino royale   Alessandra Ambrosio  ACTOR  167445960.0   \n",
            "311              casino royale    Alexander Hathaway  ACTOR  167445960.0   \n",
            "312              casino royale        Andreas Daniel  ACTOR  167445960.0   \n",
            "313              casino royale             Ben Cooke  ACTOR  167445960.0   \n",
            "...                        ...                   ...    ...          ...   \n",
            "2267  the pursuit of happyness  Victor Raider-Wexler  ACTOR  163566459.0   \n",
            "2268  the pursuit of happyness            Will Smith  ACTOR  163566459.0   \n",
            "2269  the pursuit of happyness          Yeena Fisher  ACTOR  163566459.0   \n",
            "2270  the pursuit of happyness    Zachary Culbertson  ACTOR  163566459.0   \n",
            "2271  the pursuit of happyness         Zuhair Haddad  ACTOR  163566459.0   \n",
            "\n",
            "      Imdb_Score  \n",
            "309          8.0  \n",
            "310          8.0  \n",
            "311          8.0  \n",
            "312          8.0  \n",
            "313          8.0  \n",
            "...          ...  \n",
            "2267         8.0  \n",
            "2268         8.0  \n",
            "2269         8.0  \n",
            "2270         8.0  \n",
            "2271         8.0  \n",
            "\n",
            "[486 rows x 5 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_grouped['Gross_log'] = np.log1p(df_grouped['Gross'])"
      ],
      "metadata": {
        "id": "WMH_SEOHJREB"
      },
      "execution_count": 96,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "# Detecting outliers\n",
        "Q1 = df_grouped['Gross'].quantile(0.25)\n",
        "Q3 = df_grouped['Gross'].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "lower_bound = Q1 - 1.5 * IQR\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "# Removing outliers ​​from the data set\n",
        "df_no_outliers = df_grouped[(df_grouped['Gross'] >= lower_bound) & (df_grouped['Gross'] <= upper_bound)]\n",
        "print(f\"Data without outliers:\\n{df_no_outliers.head()}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2o-2pgPyKBkD",
        "outputId": "41388698-f198-4b1c-fdd2-b9927a3cf28a"
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data without outliers:\n",
            "      Title           Name   Role      Gross  Imdb_Score  Gross_log\n",
            "0  3 idiots     Aamir Khan  ACTOR  6532908.0         8.4  15.692363\n",
            "1  3 idiots  Achyut Potdar  ACTOR  6532908.0         8.4  15.692363\n",
            "2  3 idiots   Akhil Mishra  ACTOR  6532908.0         8.4  15.692363\n",
            "3  3 idiots      Ali Fazal  ACTOR  6532908.0         8.4  15.692363\n",
            "4  3 idiots   Amardeep Jha  ACTOR  6532908.0         8.4  15.692363\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import OneHotEncoder\n",
        "from sklearn.linear_model import Ridge\n",
        "from sklearn.metrics import mean_squared_error\n",
        "\n",
        "# One-Hot Encoding and data separation again\n",
        "encoder = OneHotEncoder(sparse=False)\n",
        "X = encoder.fit_transform(df_no_outliers[['Name', 'Role']])\n",
        "y_gross = df_no_outliers['Gross']\n",
        "\n",
        "X_train_gross, X_test_gross, y_train_gross, y_test_gross = train_test_split(X, y_gross, test_size=0.2, random_state=42)\n",
        "\n",
        "# Model training\n",
        "best_alpha_gross = 10  # Daha önce GridSearchCV ile bulunan en iyi alpha değerini kullanın\n",
        "model_gross = Ridge(alpha=best_alpha_gross)\n",
        "model_gross.fit(X_train_gross, y_train_gross)\n",
        "y_pred_gross = model_gross.predict(X_test_gross)\n",
        "mse_gross = mean_squared_error(y_test_gross, y_pred_gross)\n",
        "print(f'Gross Estimated MSE (No Outliers): {mse_gross}')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X_pfK0aIKDmK",
        "outputId": "86eee37b-4c74-492a-b571-794b400eb540"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Gross Estimated MSE (No Outliers): 542681839685671.7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "# Logarithmic transformation is used to reduce the effect of large values\n",
        "df_no_outliers['Gross_log'] = np.log1p(df_no_outliers['Gross'])\n",
        "\n",
        "# Logarithmically transformed Gross value\n",
        "y_gross_log = df_no_outliers['Gross_log']\n",
        "\n",
        "# One-Hot Encoding and data separation\n",
        "X = encoder.fit_transform(df_no_outliers[['Name', 'Role']])\n",
        "X_train_gross, X_test_gross, y_train_gross, y_test_gross = train_test_split(X, y_gross_log, test_size=0.2, random_state=42)\n",
        "\n",
        "# Model training\n",
        "model_gross = Ridge(alpha=best_alpha_gross)\n",
        "model_gross.fit(X_train_gross, y_train_gross)\n",
        "y_pred_gross = model_gross.predict(X_test_gross)\n",
        "\n",
        "# MSE calculation and inversion of logarithmic values\n",
        "mse_gross_log = mean_squared_error(np.expm1(y_test_gross), np.expm1(y_pred_gross))\n",
        "print(f'Gross Estimated MSE (Log Transformed, No Outliers): {mse_gross_log}')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GOqnGqfEKVFD",
        "outputId": "16c03a6f-58c7-4f57-fe0f-0996c524f6d0"
      },
      "execution_count": 125,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-125-689dc33cfa4e>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_no_outliers['Gross_log'] = np.log1p(df_no_outliers['Gross'])\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Gross Estimated MSE (Log Transformed, No Outliers): 769018504374621.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.model_selection import train_test_split, GridSearchCV\n",
        "from sklearn.preprocessing import OneHotEncoder\n",
        "from sklearn.linear_model import Ridge\n",
        "from sklearn.metrics import mean_squared_error\n",
        "\n",
        "\n",
        "df =reremerged_df\n",
        "\n",
        "# selecting the relevant columns and filter the dataset\n",
        "df_selected = df[['Title', 'Name', 'Role', 'Gross', 'Imdb_Score']]\n",
        "\n",
        "\n",
        "df_filtered = df_selected[df_selected['Role'].isin(['ACTOR', 'DIRECTOR'])]\n",
        "\n",
        "# Logarithmic conversion (for Gross values)\n",
        "df_filtered['Log_Gross'] = np.log1p(df_filtered['Gross'])\n",
        "\n",
        "# Converting categorical data (One-Hot Encoding)\n",
        "encoder = OneHotEncoder(sparse_output=False)\n",
        "X = encoder.fit_transform(df_filtered[['Name', 'Role']])\n",
        "\n",
        "# Target variables\n",
        "y_gross = df_filtered['Log_Gross']\n",
        "y_imdb = df_filtered['Imdb_Score']\n",
        "\n",
        "# Separating the data set into training and testing\n",
        "X_train_gross, X_test_gross, y_train_gross, y_test_gross = train_test_split(X, y_gross, test_size=0.2, random_state=42)\n",
        "X_train_imdb, X_test_imdb, y_train_imdb, y_test_imdb = train_test_split(X, y_imdb, test_size=0.2, random_state=42)\n",
        "\n",
        "# Hyperparameter Optimization for Ridge Regression Model\n",
        "param_grid = {'alpha': [0.1, 1.0, 10.0, 100.0]}\n",
        "ridge_gross = Ridge()\n",
        "ridge_imdb = Ridge()\n",
        "\n",
        "\n",
        "cv_folds = min(3, len(X_train_gross))\n",
        "\n",
        "grid_search_gross = GridSearchCV(ridge_gross, param_grid, cv=cv_folds, scoring='neg_mean_squared_error')\n",
        "grid_search_gross.fit(X_train_gross, y_train_gross)\n",
        "\n",
        "grid_search_imdb = GridSearchCV(ridge_imdb, param_grid, cv=cv_folds, scoring='neg_mean_squared_error')\n",
        "grid_search_imdb.fit(X_train_imdb, y_train_imdb)\n",
        "\n",
        "best_model_gross = grid_search_gross.best_estimator_\n",
        "best_model_imdb = grid_search_imdb.best_estimator_\n",
        "\n",
        "# Make predictions and evaluate performance\n",
        "y_pred_gross = best_model_gross.predict(X_test_gross)\n",
        "y_pred_imdb = best_model_imdb.predict(X_test_imdb)\n",
        "\n",
        "# Calculating MSE by undoing log transformation\n",
        "mse_gross = mean_squared_error(np.expm1(y_test_gross), np.expm1(y_pred_gross))\n",
        "mse_imdb = mean_squared_error(y_test_imdb, y_pred_imdb)\n",
        "\n",
        "# Review the first few predictions\n",
        "predicted_gross = np.expm1(y_pred_gross[:5])  # Log dönüşümünü geri alarak tahminleri incele\n",
        "predicted_imdb = y_pred_imdb[:5]\n",
        "\n",
        "print(f'Optimized Gross Estimated MSE: {mse_gross}')\n",
        "print(f'Optimized IMDb Skoru Tahmini MSE: {mse_imdb}')\n",
        "print(\"Estimated Gross values:\", predicted_gross)\n",
        "print(\"Predicted IMDb Score values:\", predicted_imdb)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "twkQxMiDe212",
        "outputId": "bbee0807-b597-4e3b-c32b-d7c84306e573"
      },
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimized Gross Estimated MSE: 4571508734849378.0\n",
            "Optimized IMDb Skoru Tahmini MSE: 0.24677719414475632\n",
            "Estimated Gross values: [20860159.69188032 20860159.69188032 20860159.69188032 20860159.69188032\n",
            " 20860159.69188032]\n",
            "Predicted IMDb Score values: [7.8909682 7.8909682 7.8909682 7.8909682 7.8909682]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import GradientBoostingRegressor\n",
        "\n",
        "model_gross_gb = GradientBoostingRegressor(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)\n",
        "model_gross_gb.fit(X_train_gross, y_train_gross)\n",
        "y_pred_gross_gb = model_gross_gb.predict(X_test_gross)\n",
        "\n",
        "mse_gross_gb = mean_squared_error(y_test_gross, y_pred_gross_gb)\n",
        "print(f'Gross Estimated MSE (Gradient Boosting): {mse_gross_gb}')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wGcMGHRWLDqE",
        "outputId": "07dd8682-3874-4ab5-c2e7-f55e88fe3398"
      },
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Gross Estimated MSE (Gradient Boosting): 3.6840357511128596\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Gradient Boosting Model for Gross\n",
        "model_gross_gb = GradientBoostingRegressor(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)\n",
        "model_gross_gb.fit(X_train_gross, y_train_gross)\n",
        "y_pred_gross_gb = model_gross_gb.predict(X_test_gross)\n",
        "\n",
        "mse_gross_gb = mean_squared_error(y_test_gross, y_pred_gross_gb)\n",
        "print(f'Gross Estimated MSE (Gradient Boosting): {mse_gross_gb}')\n",
        "\n",
        "# Gradient Boosting Model for IMDb\n",
        "model_imdb_gb = GradientBoostingRegressor(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)\n",
        "model_imdb_gb.fit(X_train_imdb, y_train_imdb)\n",
        "y_pred_imdb_gb = model_imdb_gb.predict(X_test_imdb)\n",
        "\n",
        "mse_imdb_gb = mean_squared_error(y_test_imdb, y_pred_imdb_gb)\n",
        "print(f'IMDb Estimated MSE (Gradient Boosting): {mse_imdb_gb}')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CrQ_TKMzQG2o",
        "outputId": "5fde2272-0581-4c63-ed98-e64c84f5096b"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Gross Estimated MSE (Gradient Boosting): 2.5602030697202482\n",
            "IMDb Estimated MSE (Gradient Boosting): 0.24647663649910959\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df_filtered.columns)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gG8AIGhOYXVA",
        "outputId": "9fd47a61-e744-4c6b-cbad-0c4bd0092753"
      },
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Title', 'Name', 'Role', 'Gross', 'Imdb_Score', 'Log_Gross'], dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Checking and removing Gross values ​​that are negative or zero\n",
        "df_filtered = df_filtered[df_filtered['Gross'] > 0]\n",
        "\n",
        "\n",
        "df_filtered['Log_Gross'] = np.log1p(df_filtered['Gross'])\n"
      ],
      "metadata": {
        "id": "15rhNPUDjyE3"
      },
      "execution_count": 107,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LinearRegression\n",
        "\n",
        "# Linear Regression for Gross\n",
        "model_gross_lr = LinearRegression()\n",
        "model_gross_lr.fit(X_train_gross, y_train_gross)\n",
        "y_pred_gross_lr = model_gross_lr.predict(X_test_gross)\n",
        "\n",
        "# Linear Regression for IMDb Score\n",
        "model_imdb_lr = LinearRegression()\n",
        "model_imdb_lr.fit(X_train_imdb, y_train_imdb)\n",
        "y_pred_imdb_lr = model_imdb_lr.predict(X_test_imdb)\n",
        "\n",
        "# MSE calculation\n",
        "mse_gross_lr = mean_squared_error(y_test_gross, y_pred_gross_lr)\n",
        "mse_imdb_lr = mean_squared_error(y_test_imdb, y_pred_imdb_lr)\n",
        "\n",
        "print(f'Linear Regression Gross MSE: {mse_gross_lr}')\n",
        "print(f'Linear Regression IMDb MSE: {mse_imdb_lr}')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DabYo910j43_",
        "outputId": "00b2ea81-4113-4cf0-e739-838661da28d9"
      },
      "execution_count": 109,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Linear Regression Gross MSE: 3.2761399697488236e+27\n",
            "Linear Regression IMDb MSE: 3.910939522048912e+26\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Checking and removing Gross values ​​that are negative or zero\n",
        "df_filtered = df_filtered[df_filtered['Gross'] > 0]\n",
        "\n",
        "\n",
        "df_filtered['Log_Gross'] = np.log1p(df_filtered['Gross'])\n"
      ],
      "metadata": {
        "id": "2pgdWrS_kHU0"
      },
      "execution_count": 110,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.svm import SVR\n",
        "\n",
        "# SVR for Gross\n",
        "model_gross_svr = SVR(kernel='linear')\n",
        "model_gross_svr.fit(X_train_gross, y_train_gross)\n",
        "y_pred_gross_svr = model_gross_svr.predict(X_test_gross)\n",
        "mse_gross_svr = mean_squared_error(np.expm1(y_test_gross), np.expm1(y_pred_gross_svr))\n",
        "\n",
        "# SVR for IMDb Score\n",
        "model_imdb_svr = SVR(kernel='linear')\n",
        "model_imdb_svr.fit(X_train_imdb, y_train_imdb)\n",
        "y_pred_imdb_svr = model_imdb_svr.predict(X_test_imdb)\n",
        "mse_imdb_svr = mean_squared_error(y_test_imdb, y_pred_imdb_svr)\n",
        "\n",
        "print(f'SVR Gross MSE: {mse_gross_svr}')\n",
        "print(f'SVR IMDb MSE: {mse_imdb_svr}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oqsVCYDskm07",
        "outputId": "ecf1f766-23d2-481f-aca4-071cae76b583"
      },
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "SVR Gross MSE: 4195222358004915.5\n",
            "SVR IMDb MSE: 0.25133361815770866\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.1"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}